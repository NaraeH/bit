<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
     
     <!-- java63.web03.dao 밑의 모든 @component가 붙은 것을 찾아라  => productDao-->
	<context:component-scan base-package="java63.web03.dao">
		<!-- 다 뒤지는데  java63.web03.control은 제외해라(exclude) regex:정규식으로 표현한다.-->
		<context:exclude-filter type="regex" expression="java63.web03.control.*"/>
	</context:component-scan>
	
	<!-- DB Connection Pool 준비 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	    <property name="url" value="jdbc:mysql://localhost:3306/studydb"/>
	    <property name="username" value="study"/>
	    <property name="password" value="study"/>
	</bean>

	<!-- sqlSessionFactory 준비 -->
	<!-- sqlSessionFactory가 리턴된다. class이름을 SqlSessionFactoryFactoryBean이라고 할 수 없으므로 Factory하나 지움 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
  		<property name="mapperLocations" value="classpath*:java63/web03/dao/*Dao.xml" />
  		 <property name="typeAliasesPackage" value="java63.web03.domain" />
	</bean>
	
	<!-- connection Pool준비 -->
	<bean id="transactionManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--Dao클래스 자동생성 설정  -->
	<!-- sqlSessionFactory의 <property name="mapperLocations" value="classpath*:java63/web03/dao/*Dao.xml" />의 클래스패스의 경로에서 
	의 Dao가 필요할 때 value="java63.web03.dao"서 찾아서 객체를 생성하고 id는 그 클래스의 이름으로 해라
	  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--DAO를 위한 인터페이스가 선언된 패키지 지정  -->
  		<property name="basePackage" value="java63.web03.dao" />
	</bean>

</beans>
